{"version":3,"sources":["StarRating.tsx"],"names":["React","useRef","useEffect","useState","PanResponder","StyleSheet","View","Animated","Easing","Svg","G","Path","Rect","defaultColor","defaultAnimationConfig","easing","elastic","duration","scale","delay","StarRating","rating","maxStars","minRating","starSize","onChange","color","emptyColor","enableHalfStar","enableSwiping","animationConfig","style","starStyle","testID","width","ref","isInteracting","setInteracting","handleInteraction","x","current","newRating","Math","max","ceil","panResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","e","nativeEvent","locationX","onPanResponderStart","onPanResponderEnd","setTimeout","styles","starRating","panHandlers","measure","_x","_y","w","_h","Array","map","_","i","icon","AnimatedIcon","active","children","animatedSize","Value","animation","timing","toValue","useNativeDriver","start","stop","star","transform","StarBorder","size","StarFull","StarHalf","flexDirection","alignSelf","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport {\n    PanResponder,\n    StyleSheet,\n    View,\n    StyleProp,\n    ViewStyle,\n    Animated,\n    Easing,\n} from \"react-native\";\nimport Svg, { G, Path, Rect } from \"react-native-svg\";\n\ntype AnimationConfig = {\n    easing?: (value: number) => number;\n    duration?: number;\n    delay?: number;\n    scale?: number;\n};\n\ntype StarRatingProps = {\n    rating: number;\n    onChange: (rating: number) => void;\n    minRating?: number;\n    color?: string;\n    emptyColor?: string;\n    maxStars?: number;\n    starSize?: number;\n    enableHalfStar?: boolean;\n    enableSwiping?: boolean;\n    style?: StyleProp<ViewStyle>;\n    starStyle?: StyleProp<ViewStyle>;\n    animationConfig?: AnimationConfig;\n    testID?: string;\n};\n\nconst defaultColor = \"#fdd835\";\nconst defaultAnimationConfig: Required<AnimationConfig> = {\n    easing: Easing.elastic(2),\n    duration: 300,\n    scale: 1.2,\n    delay: 300,\n};\n\nconst StarRating: React.FC<StarRatingProps> = ({\n    rating,\n    maxStars = 5,\n    minRating = 0.5,\n    starSize = 32,\n    onChange,\n    color = defaultColor,\n    emptyColor = color,\n    enableHalfStar = true,\n    enableSwiping = true,\n    animationConfig = defaultAnimationConfig,\n    style,\n    starStyle,\n    testID,\n}) => {\n    const width = useRef<number>();\n    const ref = useRef<View>(null);\n    const [isInteracting, setInteracting] = useState(false);\n\n    const handleInteraction = (x: number) => {\n        if (width.current) {\n            const newRating = Math.max(\n                minRating,\n                Math.ceil((x / width.current) * maxStars * 2) / 2\n            );\n            onChange(enableHalfStar ? newRating : Math.ceil(newRating));\n        }\n    };\n\n    const panResponder = useRef(\n        PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onStartShouldSetPanResponderCapture: () => true,\n            onMoveShouldSetPanResponder: () => true,\n            onMoveShouldSetPanResponderCapture: () => true,\n            onPanResponderMove: e => {\n                if (enableSwiping) {\n                    handleInteraction(e.nativeEvent.locationX);\n                }\n            },\n            onPanResponderStart: e => {\n                handleInteraction(e.nativeEvent.locationX);\n                setInteracting(true);\n            },\n            onPanResponderEnd: () => {\n                setTimeout(() => {\n                    setInteracting(false);\n                }, animationConfig.delay || defaultAnimationConfig.delay);\n            },\n        })\n    );\n\n    return (\n        <View\n            ref={ref}\n            style={[styles.starRating, style]}\n            {...panResponder.current.panHandlers}\n            onLayout={() => {\n                if (ref.current) {\n                    ref.current.measure((_x, _y, w, _h) => (width.current = w));\n                }\n            }}\n            testID={testID}>\n            {[...Array(maxStars)].map((_, i) => {\n                const icon = (() => {\n                    if (rating - i >= 1) {\n                        return <StarFull size={starSize} color={color} />;\n                    }\n\n                    return rating - i >= 0.5 ? (\n                        <StarHalf size={starSize} color={color} />\n                    ) : (\n                        <StarBorder size={starSize} color={emptyColor} />\n                    );\n                })();\n                return (\n                    <AnimatedIcon\n                        key={i}\n                        active={isInteracting && rating - i >= 0.5}\n                        animationConfig={animationConfig}\n                        style={starStyle}>\n                        {icon}\n                    </AnimatedIcon>\n                );\n            })}\n        </View>\n    );\n};\n\ntype AnimatedIconProps = {\n    active: boolean;\n    children: React.ReactElement;\n    animationConfig: AnimationConfig;\n    style?: StyleProp<ViewStyle>;\n};\n\nconst AnimatedIcon: React.FC<AnimatedIconProps> = ({\n    active,\n    animationConfig,\n    children,\n    style,\n}) => {\n    const {\n        scale = defaultAnimationConfig.scale,\n        easing = defaultAnimationConfig.easing,\n        duration = defaultAnimationConfig.duration,\n    } = animationConfig;\n\n    const animatedSize = useRef(new Animated.Value(active ? scale : 1));\n\n    useEffect(() => {\n        const animation = Animated.timing(animatedSize.current, {\n            toValue: active ? scale : 1,\n            useNativeDriver: true,\n            easing,\n            duration,\n        });\n\n        animation.start();\n        return animation.stop;\n    }, [active, scale, easing, duration]);\n\n    return (\n        <Animated.View\n            pointerEvents=\"none\"\n            style={[\n                styles.star,\n                style,\n                {\n                    transform: [\n                        {\n                            scale: animatedSize.current,\n                        },\n                    ],\n                },\n            ]}>\n            {children}\n        </Animated.View>\n    );\n};\n\ntype IconProps = {\n    size: number;\n    color: string;\n};\n\nconst StarBorder: React.FC<IconProps> = ({ size, color }) => (\n    <Svg height={size} viewBox=\"0 0 24 24\" width={size}>\n        <Path\n            fill={color}\n            d=\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n        />\n    </Svg>\n);\n\nconst StarFull: React.FC<IconProps> = ({ size, color }) => (\n    <Svg height={size} viewBox=\"0 0 24 24\" width={size}>\n        <Path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <Path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <Path\n            fill={color}\n            d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n        />\n    </Svg>\n);\n\nconst StarHalf: React.FC<IconProps> = ({ size, color }) => (\n    <Svg height={size} viewBox=\"0 0 24 24\" width={size}>\n        <G>\n            <Rect fill=\"none\" height=\"24\" width=\"24\" x=\"0\" />\n        </G>\n        <G>\n            <G>\n                <G>\n                    <Path\n                        fill={color}\n                        d=\"M22,9.24l-7.19-0.62L12,2L9.19,8.63L2,9.24l5.46,4.73L5.82,21L12,17.27L18.18,21l-1.63-7.03L22,9.24z M12,15.4V6.1 l1.71,4.04l4.38,0.38l-3.32,2.88l1,4.28L12,15.4z\"\n                    />\n                </G>\n            </G>\n        </G>\n    </Svg>\n);\n\nconst styles = StyleSheet.create({\n    starRating: {\n        flexDirection: \"row\",\n        alignSelf: \"flex-start\",\n    },\n    star: {\n        marginHorizontal: 5,\n    },\n});\n\nexport default StarRating;\n"]}