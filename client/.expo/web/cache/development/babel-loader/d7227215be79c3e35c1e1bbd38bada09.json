{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\RN\\\\client\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Home, ChatList, Chat } from \"./components\";\nimport { Con, HeaderLogo } from \"./assets/common/common\";\nimport { photoShopDetail } from \"./components/Home/photoShopDetail\";\nimport { photoShopList } from \"./components/Home/photoShopList\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Location from \"expo-location\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userAddress = _useState2[0],\n      setUserAddress = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addEnabled = _useState4[0],\n      setAddEnabled = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addressDetail = _useState6[0],\n      setAddressDetail = _useState6[1];\n\n  useEffect(function () {\n    CheckLocationEnabled();\n  }, []);\n\n  var CheckLocationEnabled = function CheckLocationEnabled() {\n    var enabled;\n    return _regeneratorRuntime.async(function CheckLocationEnabled$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.hasServicesEnabledAsync());\n\n          case 2:\n            enabled = _context.sent;\n\n            if (enabled) {\n              setAddEnabled(true);\n              GetCurrentLocation();\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GetCurrentLocation = function GetCurrentLocation() {\n    var _await$Location$reque, status, _await$Location$getCu, coords, latitude, longitude, _await$Location$rever, _await$Location$rever2, address;\n\n    return _regeneratorRuntime.async(function GetCurrentLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context2.sent;\n            status = _await$Location$reque.status;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 6:\n            _await$Location$getCu = _context2.sent;\n            coords = _await$Location$getCu.coords;\n            latitude = coords.latitude, longitude = coords.longitude;\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              latitude: latitude,\n              longitude: longitude\n            }));\n\n          case 11:\n            _await$Location$rever = _context2.sent;\n            _await$Location$rever2 = _slicedToArray(_await$Location$rever, 1);\n            address = _await$Location$rever2[0];\n            setAddressDetail(coords);\n            setUserAddress(address);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarStyle: {},\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, React.createElement(HeaderLogo, {\n          onPress: function onPress() {\n            return console.log();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }), addEnabled ? React.createElement(Text, {\n          style: {\n            color: \"#757575\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }\n        }, userAddress == null ? void 0 : userAddress.region, \" \", userAddress == null ? void 0 : userAddress.district, \" \", userAddress == null ? void 0 : userAddress.street, \" \", userAddress == null ? void 0 : userAddress.postalCode) : React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }, \"\\uC704\\uCE58\\uBAB0\\uB77C\"));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(Icon, {\n          name: \"magnify\",\n          size: 25,\n          style: {\n            padding: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }\n        });\n      },\n      tabBarShowLabel: false,\n      headerTitle: \"\",\n      tabBarInactiveTintColor: \"#e0e0e0\",\n      tabBarActiveTintColor: \"#c5e1a5\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(props) {\n        return React.createElement(Icon, {\n          name: \"home-variant-outline\",\n          size: 35,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    component: Chat,\n    options: {\n      tabBarIcon: function tabBarIcon(props) {\n        return React.createElement(Icon, {\n          name: \"chat-outline\",\n          size: 35,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ChatList\",\n    component: ChatList,\n    options: {\n      tabBarIcon: function tabBarIcon(props) {\n        return React.createElement(Icon, {\n          name: \"account-outline\",\n          size: 35,\n          color: props.color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/RN/client/App.js"],"names":["React","useState","useEffect","useLayoutEffect","axios","styled","createBottomTabNavigator","NavigationContainer","StatusBar","Home","ChatList","Chat","Con","HeaderLogo","photoShopDetail","photoShopList","createStackNavigator","Icon","Location","Tab","App","userAddress","setUserAddress","addEnabled","setAddEnabled","addressDetail","setAddressDetail","CheckLocationEnabled","hasServicesEnabledAsync","enabled","GetCurrentLocation","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","latitude","longitude","reverseGeocodeAsync","address","tabBarStyle","headerLeft","flexDirection","alignItems","console","log","color","region","district","street","postalCode","headerRight","padding","tabBarShowLabel","headerTitle","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarIcon","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Home, ChatList, Chat } from \"./components\";\nimport { Con, HeaderLogo } from \"./assets/common/common\";\nimport { photoShopDetail } from \"./components/Home/photoShopDetail\";\nimport { photoShopList } from \"./components/Home/photoShopList\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport * as Location from \"expo-location\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const [userAddress, setUserAddress] = useState();\n  const [addEnabled, setAddEnabled] = useState();\n  const [addressDetail, setAddressDetail] = useState();\n\n  useEffect(() => {\n    CheckLocationEnabled();\n  }, []);\n\n  const CheckLocationEnabled = async () => {\n    const enabled = await Location.hasServicesEnabledAsync();\n\n    if (enabled) {\n      setAddEnabled(true);\n      GetCurrentLocation();\n    }\n  };\n\n  const GetCurrentLocation = async () => {\n    const { status } = await Location.requestForegroundPermissionsAsync();\n    const { coords } = await Location.getCurrentPositionAsync();\n    const { latitude, longitude } = coords;\n    const [address] = await Location.reverseGeocodeAsync({\n      latitude,\n      longitude,\n    });\n    setAddressDetail(coords);\n    setUserAddress(address);\n  };\n\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          tabBarStyle: {},\n          headerLeft: () => {\n            return (\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <HeaderLogo onPress={() => console.log()}></HeaderLogo>\n                {addEnabled ? (\n                  <Text style={{ color: \"#757575\" }}>\n                    {userAddress?.region} {userAddress?.district}{\" \"}\n                    {userAddress?.street} {userAddress?.postalCode}\n                  </Text>\n                ) : (\n                  <Text>위치몰라</Text>\n                )}\n              </View>\n            );\n          },\n          headerRight: () => {\n            return <Icon name=\"magnify\" size={25} style={{ padding: 15 }} />;\n          },\n          tabBarShowLabel: false,\n          headerTitle: \"\",\n          tabBarInactiveTintColor: \"#e0e0e0\",\n          tabBarActiveTintColor: \"#c5e1a5\",\n        }}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            tabBarIcon: (props) => {\n              return (\n                <Icon\n                  name=\"home-variant-outline\"\n                  size={35}\n                  color={props.color}\n                />\n              );\n            },\n          }}\n        />\n        <Tab.Screen\n          name=\"Chat\"\n          component={Chat}\n          options={{\n            tabBarIcon: (props) => {\n              return <Icon name=\"chat-outline\" size={35} color={props.color} />;\n            },\n          }}\n        />\n        <Tab.Screen\n          name=\"ChatList\"\n          component={ChatList}\n          options={{\n            tabBarIcon: (props) => {\n              return (\n                <Icon name=\"account-outline\" size={35} color={props.color} />\n              );\n            },\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}