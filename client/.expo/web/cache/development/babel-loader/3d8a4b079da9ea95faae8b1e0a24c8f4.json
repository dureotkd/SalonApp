{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\RN\\\\client\\\\components\\\\Home\\\\photoShopList.js\";\n\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport { Card, ListCard, ShopDes, ShopTitle } from \"../../assets/common/common\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport styled, { withTheme } from \"styled-components/native\";\nimport { Rating, AirbnbRating } from \"react-native-ratings\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Port from \"../Port\";\n\nvar SortBtnList = function SortBtnList(props) {\n  var userWidth = Dimensions.get(\"window\").width;\n\n  var _useState = useState(\"normal\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortState = _useState2[0],\n      setSortState = _useState2[1];\n\n  var sortArr = [{\n    name: \"기본\",\n    code: \"normal\"\n  }, {\n    name: \"평점 높은 곳\",\n    code: \"rate\"\n  }, {\n    name: \"가장 가까운 곳\",\n    code: \"near\"\n  }, {\n    name: \"리뷰 많은 곳\",\n    code: \"review\"\n  }];\n\n  var handleSort = function handleSort(code) {\n    if (code === sortState) return;\n\n    var cloneList = _toConsumableArray(props.photoShops);\n\n    var standard;\n\n    switch (code) {\n      default:\n        {\n          alert(\"아직 준비중인 서비스입니다.\");\n          return;\n          break;\n        }\n\n      case \"rate\":\n        {\n          cloneList.sort(function (prev, next) {\n            return prev.satis_avg < next.satis_avg ? 1 : -1;\n          });\n          break;\n        }\n\n      case \"near\":\n        {\n          alert(\"아직 준비중인 서비스입니다.\");\n          return;\n          break;\n        }\n\n      case \"review\":\n        {\n          alert(\"아직 준비중인 서비스입니다.\");\n          return;\n          break;\n        }\n    }\n\n    props.setPhotoShops(cloneList);\n    setSortState(code);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      width: userWidth - 30,\n      height: 40,\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      marginTop: 8,\n      borderRadius: 6,\n      elevation: 3,\n      backgroundColor: \"#353535\",\n      shadowOffset: {\n        width: 1,\n        height: 1\n      },\n      shadowOpacity: 0.3,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, sortArr.map(function (item, idx) {\n    return React.createElement(TouchableOpacity, {\n      key: idx,\n      onPress: handleSort.bind(_this, item.code),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, item.code === sortState ? React.createElement(View, {\n      style: {\n        backgroundColor: \"#66bb6a\",\n        padding: 6,\n        borderRadius: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, item.name)) : React.createElement(Text, {\n      style: {\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, item.name));\n  }));\n};\n\nexport var photoShopList = function photoShopList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      photoShops = _useState4[0],\n      setPhotoShops = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"zzz\");\n    axios({\n      method: \"get\",\n      url: Port + \"/getPhotoShop\",\n      responseType: \"json\"\n    }).then(function (_ref2) {\n      var data = _ref2.data,\n          status = _ref2.status;\n      if (status == 200) setPhotoShops(data);\n    }).catch(function (res) {\n      console.log(res);\n    });\n  }, []);\n  return React.createElement(ListCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(SortBtnList, {\n    photoShops: photoShops,\n    setPhotoShops: setPhotoShops,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), photoShops && photoShops.map(function (val, idx) {\n    return React.createElement(Card, {\n      key: val.seq,\n      onPress: function onPress() {\n        return navigation.navigate(\"Detail\", {\n          row: val\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 150,\n        height: 150,\n        borderRadius: 6\n      },\n      source: {\n        uri: \"\" + val.present_img\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        marginLeft: 10,\n        alignItems: \"baseline\",\n        position: \"relative\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, React.createElement(ShopTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, val.title), React.createElement(ShopDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, val.local), React.createElement(ShopDes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"\\uB9E4\\uC77C 10\\uC2DC~9\\uC2DC\"), React.createElement(AirbnbRating, {\n      type: \"custom\",\n      reviews: [1, 2, 3, 4, 5],\n      ratingBackgroundColor: \"#c8c7c8\",\n      ratingCount: 5,\n      isDisabled: true,\n      defaultRating: val.satis_avg,\n      size: 15,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }))));\n  }));\n};","map":{"version":3,"sources":["C:/RN/client/components/Home/photoShopList.js"],"names":["React","useLayoutEffect","useEffect","useState","axios","Card","ListCard","ShopDes","ShopTitle","SafeAreaView","Icon","styled","withTheme","Rating","AirbnbRating","createStackNavigator","Port","SortBtnList","props","userWidth","Dimensions","get","width","sortState","setSortState","sortArr","name","code","handleSort","cloneList","photoShops","standard","alert","sort","prev","next","satis_avg","setPhotoShops","flexDirection","height","justifyContent","alignItems","marginTop","borderRadius","elevation","backgroundColor","shadowOffset","shadowOpacity","marginBottom","map","item","idx","bind","padding","color","fontWeight","photoShopList","navigation","console","log","method","url","responseType","then","data","status","catch","res","val","seq","navigate","row","uri","present_img","marginLeft","position","title","local"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  Image,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { Card, ListCard, ShopDes, ShopTitle } from \"../../assets/common/common\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport styled, { withTheme } from \"styled-components/native\";\r\nimport { Rating, AirbnbRating } from \"react-native-ratings\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Port from \"../Port\";\r\n\r\nconst SortBtnList = (props) => {\r\n  const userWidth = Dimensions.get(\"window\").width;\r\n  const [sortState, setSortState] = useState(\"normal\");\r\n  const sortArr = [\r\n    { name: \"기본\", code: \"normal\" },\r\n    { name: \"평점 높은 곳\", code: \"rate\" },\r\n    { name: \"가장 가까운 곳\", code: \"near\" },\r\n    { name: \"리뷰 많은 곳\", code: \"review\" },\r\n  ];\r\n\r\n  const handleSort = (code) => {\r\n    if (code === sortState) return;\r\n\r\n    const cloneList = [...props.photoShops];\r\n    let standard;\r\n    switch (code) {\r\n      default: {\r\n        alert(\"아직 준비중인 서비스입니다.\");\r\n        return;\r\n        break;\r\n      }\r\n      case \"rate\": {\r\n        cloneList.sort((prev, next) => {\r\n          return prev.satis_avg < next.satis_avg ? 1 : -1;\r\n        });\r\n        break;\r\n      }\r\n      case \"near\": {\r\n        alert(\"아직 준비중인 서비스입니다.\");\r\n        return;\r\n        break;\r\n      }\r\n      case \"review\": {\r\n        alert(\"아직 준비중인 서비스입니다.\");\r\n        return;\r\n        break;\r\n      }\r\n    }\r\n\r\n    props.setPhotoShops(cloneList);\r\n    setSortState(code);\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        width: userWidth - 30,\r\n        height: 40,\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        marginTop: 8,\r\n        borderRadius: 6,\r\n        elevation: 3,\r\n        backgroundColor: \"#353535\",\r\n        shadowOffset: { width: 1, height: 1 },\r\n        shadowOpacity: 0.3,\r\n        marginBottom: 20,\r\n      }}\r\n    >\r\n      {sortArr.map((item, idx) => {\r\n        return (\r\n          <TouchableOpacity\r\n            key={idx}\r\n            onPress={handleSort.bind(this, item.code)}\r\n          >\r\n            {item.code === sortState ? (\r\n              <View\r\n                style={{\r\n                  backgroundColor: \"#66bb6a\",\r\n                  padding: 6,\r\n                  borderRadius: 4,\r\n                }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>{item.name}</Text>\r\n              </View>\r\n            ) : (\r\n              <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n                {item.name}\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const photoShopList = ({ navigation }) => {\r\n  const [photoShops, setPhotoShops] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(\"zzz\");\r\n    axios({\r\n      method: \"get\",\r\n      url: `${Port}/getPhotoShop`,\r\n      responseType: \"json\",\r\n    })\r\n      .then(({ data, status }) => {\r\n        if (status == 200) setPhotoShops(data);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <ListCard>\r\n      <SortBtnList photoShops={photoShops} setPhotoShops={setPhotoShops} />\r\n      {photoShops &&\r\n        photoShops.map((val, idx) => {\r\n          return (\r\n            <Card\r\n              key={val.seq}\r\n              onPress={() => navigation.navigate(\"Detail\", { row: val })}\r\n            >\r\n              <View style={{ flexDirection: \"row\" }}>\r\n                <Image\r\n                  style={{ width: 150, height: 150, borderRadius: 6 }}\r\n                  source={{\r\n                    uri: `${val.present_img}`,\r\n                  }}\r\n                />\r\n                <View\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    alignItems: \"baseline\",\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <ShopTitle>{val.title}</ShopTitle>\r\n                  <ShopDes>{val.local}</ShopDes>\r\n                  <ShopDes>매일 10시~9시</ShopDes>\r\n                  <AirbnbRating\r\n                    type=\"custom\"\r\n                    reviews={[1, 2, 3, 4, 5]}\r\n                    ratingBackgroundColor=\"#c8c7c8\"\r\n                    ratingCount={5}\r\n                    isDisabled={true}\r\n                    defaultRating={val.satis_avg}\r\n                    size={15}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </Card>\r\n          );\r\n        })}\r\n    </ListCard>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}