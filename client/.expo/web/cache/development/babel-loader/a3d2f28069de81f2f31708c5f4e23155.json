{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\ReactNative\\\\client\\\\node_modules\\\\react-native-star-view\\\\lib\\\\Star.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport YellowStar from \"./star-yellow.png\";\nimport GrayStar from \"./star-gray.png\";\nimport HalfStar from \"./star-half.png\";\nvar STAR_COUNT = 5;\n\nvar Star = function (_React$PureComponent) {\n  _inherits(Star, _React$PureComponent);\n\n  var _super = _createSuper(Star);\n\n  function Star() {\n    _classCallCheck(this, Star);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Star, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          score = _this$props.score,\n          totalScore = _this$props.totalScore,\n          style = _this$props.style;\n      var scale = totalScore / STAR_COUNT;\n      var yellowStarCount = ~~(score / scale);\n      var dif = score / scale - yellowStarCount;\n      var halfStarCount = 0;\n      var grayStarCount = STAR_COUNT - yellowStarCount;\n\n      if (0 <= dif && dif < 0.3) {} else if (0.3 <= dif && dif < 0.8) {\n        halfStarCount = 1;\n        grayStarCount = grayStarCount - 1;\n      } else if (dif >= 0.8) {\n        yellowStarCount = yellowStarCount + 1;\n        grayStarCount = grayStarCount - 1;\n      }\n\n      var flattenStyle = {};\n\n      if (typeof style === 'number') {\n        flattenStyle = StyleSheet.flatten([style]);\n      } else {\n        flattenStyle = style;\n      }\n\n      var starWidth = flattenStyle.width / STAR_COUNT || 30;\n      var starHeight = flattenStyle.height || 30;\n\n      var _Star = function _Star(_ref) {\n        var source = _ref.source;\n        return React.createElement(View, {\n          style: [Styles.star, {\n            width: starWidth,\n            height: starHeight\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: [Styles.starImg, {\n            width: starWidth * 0.8,\n            height: starHeight * 0.8\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }\n        }));\n      };\n\n      return React.createElement(View, {\n        style: [Styles.container, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, Array(yellowStarCount).fill().map(function (e, i) {\n        return React.createElement(_Star, {\n          key: i.toString(),\n          source: YellowStar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 54\n          }\n        });\n      }), Array(halfStarCount).fill().map(function (e, i) {\n        return React.createElement(_Star, {\n          key: i.toString(),\n          source: HalfStar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 52\n          }\n        });\n      }), Array(grayStarCount).fill().map(function (e, i) {\n        return React.createElement(_Star, {\n          key: i.toString(),\n          source: GrayStar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 52\n          }\n        });\n      }));\n    }\n  }]);\n\n  return Star;\n}(React.PureComponent);\n\nvar Styles = StyleSheet.create({\n  container: {\n    width: 150,\n    height: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  star: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starImg: {\n    width: '80%',\n    height: '80%'\n  }\n});\nStar.propTypes = {\n  score: PropTypes.number.isRequired,\n  totalScore: PropTypes.number,\n  style: PropTypes.any\n};\nStar.defaultProps = {\n  totalScore: 5,\n  style: {\n    width: 150,\n    height: 30\n  }\n};\nexport default Star;","map":{"version":3,"sources":["C:/ReactNative/client/node_modules/react-native-star-view/lib/Star.js"],"names":["React","PropTypes","YellowStar","GrayStar","HalfStar","STAR_COUNT","Star","props","score","totalScore","style","scale","yellowStarCount","dif","halfStarCount","grayStarCount","flattenStyle","StyleSheet","flatten","starWidth","width","starHeight","height","source","Styles","star","starImg","container","Array","fill","map","e","i","toString","PureComponent","create","flexDirection","justifyContent","alignItems","propTypes","number","isRequired","any","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport YellowStar from './star-yellow.png';\nimport GrayStar from './star-gray.png';\nimport HalfStar from './star-half.png';\nconst STAR_COUNT = 5;\n\n// default total score is 5\n// if score >= 3.3 and score < 3.8 contain half star\n// default length is 150 height is 30\nclass Star extends React.PureComponent {\n  render() {\n    const { score, totalScore, style } = this.props;\n    const scale = totalScore / STAR_COUNT;\n    let yellowStarCount = ~~(score / scale);\n    const dif = (score/scale) - yellowStarCount\n    let halfStarCount = 0;\n    let grayStarCount = STAR_COUNT - yellowStarCount;\n    if (0 <= dif && dif < 0.3) {\n      // console.log('0 <= dif && 0 < 0.3');\n    } else if (0.3 <= dif && dif < 0.8) {\n      halfStarCount = 1;\n      grayStarCount = grayStarCount - 1;\n    } else if (dif >= 0.8) {\n      yellowStarCount = yellowStarCount + 1;\n      grayStarCount = grayStarCount - 1;\n    }\n    let flattenStyle = {};\n    if (typeof style === 'number') {\n      flattenStyle = StyleSheet.flatten([style]);\n    } else {\n      flattenStyle = style;\n    }\n    const starWidth = flattenStyle.width/STAR_COUNT || 30;\n    const starHeight = flattenStyle.height || 30;\n    const Star = ({source}) => (\n      <View style={[Styles.star, { width: starWidth, height: starHeight }]}>\n        <Image\n          source={source}\n          style={[Styles.starImg, {\n            width: starWidth*0.8, height: starHeight*0.8\n          }]} />\n      </View>\n    );\n    return (\n      <View style={[Styles.container, style]}>\n        {Array(yellowStarCount).fill().map((e, i) => <Star key={i.toString()} source={YellowStar} />)}\n        {Array(halfStarCount).fill().map((e, i) => <Star key={i.toString()} source={HalfStar} />)}\n        {Array(grayStarCount).fill().map((e, i) => <Star key={i.toString()} source={GrayStar} />)}\n      </View>\n    );\n  }\n}\n\nconst Styles = StyleSheet.create({\n  container: {\n    width: 150,\n    height: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  star: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starImg: {\n    width: '80%',\n    height: '80%',\n  },\n});\n\nStar.propTypes = {\n  score: PropTypes.number.isRequired,\n  totalScore: PropTypes.number,\n  style: PropTypes.any,\n};\n\nStar.defaultProps = {\n  totalScore: 5,\n  style: {\n    width: 150,\n    height: 30,\n  },\n};\n\nexport default Star;\n"]},"metadata":{},"sourceType":"module"}