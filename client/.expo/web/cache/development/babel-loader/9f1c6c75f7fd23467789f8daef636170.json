{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\RN\\\\client\\\\node_modules\\\\react-native-swiper-flatlist\\\\src\\\\components\\\\Pagination\\\\Pagination.tsx\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, vertical, horizontal } from \"../../themes\";\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    flexDirection: 'row',\n    marginVertical: vertical.xxSmall,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    bottom: 0,\n    height: horizontal.small\n  },\n  pagination: {\n    width: horizontal.small,\n    height: horizontal.small,\n    borderRadius: 25,\n    marginHorizontal: horizontal.xSmall\n  }\n});\nexport var Pagination = function Pagination(_ref) {\n  var size = _ref.size,\n      _ref$paginationIndex = _ref.paginationIndex,\n      paginationIndex = _ref$paginationIndex === void 0 ? 0 : _ref$paginationIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      _ref$paginationDefaul = _ref.paginationDefaultColor,\n      paginationDefaultColor = _ref$paginationDefaul === void 0 ? colors.gray : _ref$paginationDefaul,\n      _ref$paginationActive = _ref.paginationActiveColor,\n      paginationActiveColor = _ref$paginationActive === void 0 ? colors.white : _ref$paginationActive,\n      _ref$paginationStyle = _ref.paginationStyle,\n      paginationStyle = _ref$paginationStyle === void 0 ? {} : _ref$paginationStyle,\n      _ref$paginationStyleI = _ref.paginationStyleItem,\n      paginationStyleItem = _ref$paginationStyleI === void 0 ? {} : _ref$paginationStyleI,\n      _ref$paginationStyleI2 = _ref.paginationStyleItemActive,\n      paginationStyleItemActive = _ref$paginationStyleI2 === void 0 ? {} : _ref$paginationStyleI2,\n      _ref$paginationStyleI3 = _ref.paginationStyleItemInactive,\n      paginationStyleItemInactive = _ref$paginationStyleI3 === void 0 ? {} : _ref$paginationStyleI3,\n      onPaginationSelectedIndex = _ref.onPaginationSelectedIndex,\n      _ref$e2eID = _ref.e2eID,\n      e2eID = _ref$e2eID === void 0 ? '' : _ref$e2eID;\n  return React.createElement(View, {\n    style: [styles.container, paginationStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, Array.from({\n    length: size\n  }).map(function (_, index) {\n    return React.createElement(TouchableOpacity, {\n      testID: e2eID + \"_pagination_\" + index,\n      style: [styles.pagination, paginationStyleItem, paginationIndex === index ? {\n        backgroundColor: paginationActiveColor\n      } : {\n        backgroundColor: paginationDefaultColor\n      }, paginationIndex === index ? paginationStyleItemActive : paginationStyleItemInactive],\n      key: index,\n      onPress: function onPress() {\n        scrollToIndex({\n          index: index\n        });\n        onPaginationSelectedIndex == null ? void 0 : onPaginationSelectedIndex();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    });\n  }));\n};","map":{"version":3,"sources":["C:/RN/client/node_modules/react-native-swiper-flatlist/src/components/Pagination/Pagination.tsx"],"names":["React","colors","vertical","horizontal","styles","StyleSheet","create","container","position","flexDirection","marginVertical","xxSmall","justifyContent","alignSelf","bottom","height","small","pagination","width","borderRadius","marginHorizontal","xSmall","Pagination","size","paginationIndex","scrollToIndex","paginationDefaultColor","gray","paginationActiveColor","white","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","e2eID","Array","from","length","map","_","index","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAER,QAAQ,CAACS,OAHhB;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,SAAS,EAAE,QALF;AAMTC,IAAAA,MAAM,EAAE,CANC;AAOTC,IAAAA,MAAM,EAAEZ,UAAU,CAACa;AAPV,GADoB;AAU/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEf,UAAU,CAACa,KADR;AAEVD,IAAAA,MAAM,EAAEZ,UAAU,CAACa,KAFT;AAGVG,IAAAA,YAAY,EAAE,EAHJ;AAIVC,IAAAA,gBAAgB,EAAEjB,UAAU,CAACkB;AAJnB;AAVmB,CAAlB,CAAf;AAkBA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAY/C;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,kCAVJC,eAUI;AAAA,MAVJA,eAUI,qCAVc,CAUd;AAAA,MATJC,aASI,QATJA,aASI;AAAA,mCARJC,sBAQI;AAAA,MARJA,sBAQI,sCARqBzB,MAAM,CAAC0B,IAQ5B;AAAA,mCAPJC,qBAOI;AAAA,MAPJA,qBAOI,sCAPoB3B,MAAM,CAAC4B,KAO3B;AAAA,kCANJC,eAMI;AAAA,MANJA,eAMI,qCANc,EAMd;AAAA,mCALJC,mBAKI;AAAA,MALJA,mBAKI,sCALkB,EAKlB;AAAA,oCAJJC,yBAII;AAAA,MAJJA,yBAII,uCAJwB,EAIxB;AAAA,oCAHJC,2BAGI;AAAA,MAHJA,2BAGI,uCAH0B,EAG1B;AAAA,MAFJC,yBAEI,QAFJA,yBAEI;AAAA,wBADJC,KACI;AAAA,MADJA,KACI,2BADI,EACJ;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC/B,MAAM,CAACG,SAAR,EAAmBuB,eAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEf;AAAV,GAAX,EAA6BgB,GAA7B,CAAiC,UAACC,CAAD,EAAIC,KAAJ;AAAA,WAChC,oBAAC,gBAAD;AACE,MAAA,MAAM,EAAKN,KAAL,oBAAyBM,KADjC;AAEE,MAAA,KAAK,EAAE,CACLrC,MAAM,CAACa,UADF,EAELc,mBAFK,EAGLP,eAAe,KAAKiB,KAApB,GACI;AAAEC,QAAAA,eAAe,EAAEd;AAAnB,OADJ,GAEI;AAAEc,QAAAA,eAAe,EAAEhB;AAAnB,OALC,EAMLF,eAAe,KAAKiB,KAApB,GAA4BT,yBAA5B,GAAwDC,2BANnD,CAFT;AAUE,MAAA,GAAG,EAAEQ,KAVP;AAWE,MAAA,OAAO,EAAE,mBAAM;AACbhB,QAAAA,aAAa,CAAC;AAAEgB,UAAAA,KAAK,EAALA;AAAF,SAAD,CAAb;AACAP,QAAAA,yBAAyB,QAAzB,YAAAA,yBAAyB;AAC1B,OAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC;AAAA,GAAjC,CADH,CADF;AAsBD,CAnCM","sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { colors, vertical, horizontal } from '../../themes';\nimport { PaginationProps } from './PaginationProps';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    flexDirection: 'row',\n    marginVertical: vertical.xxSmall,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    bottom: 0,\n    height: horizontal.small,\n  },\n  pagination: {\n    width: horizontal.small,\n    height: horizontal.small,\n    borderRadius: 25,\n    marginHorizontal: horizontal.xSmall,\n  },\n});\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  size,\n  paginationIndex = 0,\n  scrollToIndex,\n  paginationDefaultColor = colors.gray,\n  paginationActiveColor = colors.white,\n  paginationStyle = {},\n  paginationStyleItem = {},\n  paginationStyleItemActive = {},\n  paginationStyleItemInactive = {},\n  onPaginationSelectedIndex,\n  e2eID = '',\n}) => {\n  return (\n    <View style={[styles.container, paginationStyle]}>\n      {Array.from({ length: size }).map((_, index) => (\n        <TouchableOpacity\n          testID={`${e2eID}_pagination_${index}`}\n          style={[\n            styles.pagination,\n            paginationStyleItem,\n            paginationIndex === index\n              ? { backgroundColor: paginationActiveColor }\n              : { backgroundColor: paginationDefaultColor },\n            paginationIndex === index ? paginationStyleItemActive : paginationStyleItemInactive,\n          ]}\n          key={index}\n          onPress={() => {\n            scrollToIndex({ index });\n            onPaginationSelectedIndex?.();\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}