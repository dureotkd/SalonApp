{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"vertical\", \"children\", \"data\", \"renderItem\", \"renderAll\", \"index\", \"showPagination\", \"PaginationComponent\", \"paginationActiveColor\", \"paginationDefaultColor\", \"paginationStyle\", \"paginationStyleItem\", \"paginationStyleItemActive\", \"paginationStyleItemInactive\", \"onPaginationSelectedIndex\", \"autoplayDelay\", \"autoplay\", \"autoplayLoop\", \"autoplayLoopKeepAnimation\", \"autoplayInvertDirection\", \"onChangeIndex\", \"onMomentumScrollEnd\", \"onViewableItemsChanged\", \"viewabilityConfig\", \"disableGesture\", \"e2eID\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\ReactNative\\\\client\\\\node_modules\\\\react-native-swiper-flatlist\\\\src\\\\components\\\\SwiperFlatList\\\\SwiperFlatList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Pagination } from \"../Pagination/Pagination\";\nvar MILLISECONDS = 1000;\nvar FIRST_INDEX = 0;\nvar ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nexport var SwiperFlatList = React.forwardRef(function (_ref, ref) {\n  var _ref$vertical = _ref.vertical,\n      vertical = _ref$vertical === void 0 ? false : _ref$vertical,\n      children = _ref.children,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      renderItem = _ref.renderItem,\n      _ref$renderAll = _ref.renderAll,\n      renderAll = _ref$renderAll === void 0 ? false : _ref$renderAll,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? FIRST_INDEX : _ref$index,\n      _ref$showPagination = _ref.showPagination,\n      showPagination = _ref$showPagination === void 0 ? false : _ref$showPagination,\n      _ref$PaginationCompon = _ref.PaginationComponent,\n      PaginationComponent = _ref$PaginationCompon === void 0 ? Pagination : _ref$PaginationCompon,\n      paginationActiveColor = _ref.paginationActiveColor,\n      paginationDefaultColor = _ref.paginationDefaultColor,\n      paginationStyle = _ref.paginationStyle,\n      paginationStyleItem = _ref.paginationStyleItem,\n      paginationStyleItemActive = _ref.paginationStyleItemActive,\n      paginationStyleItemInactive = _ref.paginationStyleItemInactive,\n      onPaginationSelectedIndex = _ref.onPaginationSelectedIndex,\n      _ref$autoplayDelay = _ref.autoplayDelay,\n      autoplayDelay = _ref$autoplayDelay === void 0 ? 3 : _ref$autoplayDelay,\n      _ref$autoplay = _ref.autoplay,\n      autoplay = _ref$autoplay === void 0 ? false : _ref$autoplay,\n      _ref$autoplayLoop = _ref.autoplayLoop,\n      autoplayLoop = _ref$autoplayLoop === void 0 ? false : _ref$autoplayLoop,\n      _ref$autoplayLoopKeep = _ref.autoplayLoopKeepAnimation,\n      autoplayLoopKeepAnimation = _ref$autoplayLoopKeep === void 0 ? false : _ref$autoplayLoopKeep,\n      _ref$autoplayInvertDi = _ref.autoplayInvertDirection,\n      autoplayInvertDirection = _ref$autoplayInvertDi === void 0 ? false : _ref$autoplayInvertDi,\n      onChangeIndex = _ref.onChangeIndex,\n      onMomentumScrollEnd = _ref.onMomentumScrollEnd,\n      onViewableItemsChanged = _ref.onViewableItemsChanged,\n      _ref$viewabilityConfi = _ref.viewabilityConfig,\n      viewabilityConfig = _ref$viewabilityConfi === void 0 ? {} : _ref$viewabilityConfi,\n      _ref$disableGesture = _ref.disableGesture,\n      disableGesture = _ref$disableGesture === void 0 ? false : _ref$disableGesture,\n      e2eID = _ref.e2eID,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _data = [];\n\n  var _renderItem;\n\n  if (children) {\n    _data = Array.isArray(children) ? children : [children];\n\n    _renderItem = function _renderItem(_ref2) {\n      var item = _ref2.item;\n      return item;\n    };\n  } else if (data) {\n    _data = data;\n    _renderItem = renderItem;\n  } else {\n    console.error('Invalid props, `data` or `children` is required');\n  }\n\n  var size = _data.length;\n\n  var _initialNumToRender = renderAll ? size : 1;\n\n  var _React$useState = React.useState({\n    index: index,\n    prevIndex: index\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIndexes = _React$useState2[0],\n      setCurrentIndexes = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ignoreOnMomentumScrollEnd = _React$useState4[0],\n      setIgnoreOnMomentumScrollEnd = _React$useState4[1];\n\n  var flatListElement = React.useRef(null);\n\n  var _React$useState5 = React.useState(!disableGesture),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      scrollEnabled = _React$useState6[0],\n      setScrollEnabled = _React$useState6[1];\n\n  var _onChangeIndex = React.useCallback(function (_ref3) {\n    var _index = _ref3.index,\n        _prevIndex = _ref3.prevIndex;\n\n    if (_index !== _prevIndex) {\n      onChangeIndex == null ? void 0 : onChangeIndex({\n        index: _index,\n        prevIndex: _prevIndex\n      });\n    }\n  }, [onChangeIndex]);\n\n  var _scrollToIndex = function _scrollToIndex(params, extra) {\n    var _flatListElement$curr;\n\n    var indexToScroll = params.index,\n        _params$animated = params.animated,\n        animated = _params$animated === void 0 ? true : _params$animated;\n    var newParams = {\n      animated: animated,\n      index: indexToScroll\n    };\n    setIgnoreOnMomentumScrollEnd(true);\n    var next = {\n      index: indexToScroll,\n      prevIndex: currentIndexes.index\n    };\n\n    if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes({\n        index: next.index,\n        prevIndex: next.prevIndex\n      });\n    } else if (currentIndexes.index !== next.index) {\n      setCurrentIndexes(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          index: next.index\n        });\n      });\n    } else if (currentIndexes.prevIndex !== next.prevIndex) {\n      setCurrentIndexes(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          prevIndex: next.prevIndex\n        });\n      });\n    }\n\n    if (extra.useOnChangeIndex) {\n      _onChangeIndex({\n        index: next.index,\n        prevIndex: next.prevIndex\n      });\n    }\n\n    flatListElement == null ? void 0 : (_flatListElement$curr = flatListElement.current) == null ? void 0 : _flatListElement$curr.scrollToIndex(newParams);\n  };\n\n  React.useEffect(function () {\n    _onChangeIndex({\n      index: currentIndexes.index,\n      prevIndex: currentIndexes.prevIndex\n    });\n  }, [currentIndexes.index]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollToIndex: function scrollToIndex(item) {\n        setScrollEnabled(true);\n\n        _scrollToIndex(item, {\n          useOnChangeIndex: true\n        });\n\n        setScrollEnabled(!disableGesture);\n      },\n      getCurrentIndex: function getCurrentIndex() {\n        return currentIndexes.index;\n      },\n      getPrevIndex: function getPrevIndex() {\n        return currentIndexes.prevIndex;\n      },\n      goToLastIndex: function goToLastIndex() {\n        setScrollEnabled(true);\n\n        _scrollToIndex({\n          index: size - 1\n        }, {\n          useOnChangeIndex: false\n        });\n\n        setScrollEnabled(!disableGesture);\n      },\n      goToFirstIndex: function goToFirstIndex() {\n        setScrollEnabled(true);\n\n        _scrollToIndex({\n          index: FIRST_INDEX\n        }, {\n          useOnChangeIndex: false\n        });\n\n        setScrollEnabled(!disableGesture);\n      }\n    };\n  });\n  React.useEffect(function () {\n    var isLastIndexEnd = autoplayInvertDirection ? currentIndexes.index === FIRST_INDEX : currentIndexes.index === _data.length - 1;\n    var shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n    var autoplayTimer;\n\n    if (shouldContinuoWithAutoplay || autoplayLoop) {\n      autoplayTimer = setTimeout(function () {\n        if (_data.length < 1) {\n          return;\n        }\n\n        var nextIncrement = autoplayInvertDirection ? -1 : +1;\n        var nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n\n        if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n          nextIndex = _data.length - 1;\n        }\n\n        var animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n\n        _scrollToIndex({\n          index: nextIndex,\n          animated: animate\n        }, {\n          useOnChangeIndex: true\n        });\n      }, autoplayDelay * MILLISECONDS);\n    }\n\n    return function () {\n      return clearTimeout(autoplayTimer);\n    };\n  }, [currentIndexes.index]);\n\n  var _onMomentumScrollEnd = function _onMomentumScrollEnd(event) {\n    if (ignoreOnMomentumScrollEnd) {\n      setIgnoreOnMomentumScrollEnd(false);\n      return;\n    }\n\n    onMomentumScrollEnd == null ? void 0 : onMomentumScrollEnd({\n      index: currentIndexes.index\n    }, event);\n  };\n\n  var _onViewableItemsChanged = React.useMemo(function () {\n    return function (params) {\n      var changed = params.changed;\n      var newItem = changed == null ? void 0 : changed[FIRST_INDEX];\n\n      if (newItem !== undefined) {\n        var nextIndex = newItem.index;\n\n        if (newItem.isViewable) {\n          setCurrentIndexes(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              index: nextIndex\n            });\n          });\n        } else {\n          setCurrentIndexes(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              prevIndex: nextIndex\n            });\n          });\n        }\n      }\n\n      onViewableItemsChanged == null ? void 0 : onViewableItemsChanged(params);\n    };\n  }, []);\n\n  var keyExtractor = function keyExtractor(_item, _index) {\n    return _index.toString();\n  };\n\n  var onScrollToIndexFailed = function onScrollToIndexFailed(info) {\n    return setTimeout(function () {\n      return _scrollToIndex({\n        index: info.index,\n        animated: false\n      }, {\n        useOnChangeIndex: true\n      });\n    });\n  };\n\n  var flatListProps = _objectSpread(_objectSpread({\n    scrollEnabled: scrollEnabled,\n    ref: flatListElement,\n    keyExtractor: keyExtractor,\n    horizontal: !vertical,\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    pagingEnabled: true\n  }, props), {}, {\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: onScrollToIndexFailed,\n    data: _data,\n    renderItem: _renderItem,\n    initialNumToRender: _initialNumToRender,\n    initialScrollIndex: index,\n    viewabilityConfig: _objectSpread({\n      minimumViewTime: 200,\n      itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD\n    }, viewabilityConfig),\n    onViewableItemsChanged: _onViewableItemsChanged,\n    testID: e2eID\n  });\n\n  if (Platform.OS === 'web') {\n    if (props.getItemLayout === undefined) {\n      var ITEM_DIMENSION = vertical ? HEIGHT : WIDTH;\n\n      flatListProps.getItemLayout = function (__data, ItemIndex) {\n        return {\n          length: ITEM_DIMENSION,\n          offset: ITEM_DIMENSION * ItemIndex,\n          index: ItemIndex\n        };\n      };\n    }\n\n    flatListProps.dataSet = {\n      'paging-enabled-fix': true\n    };\n  }\n\n  var scrollToIndexForPagination = function scrollToIndexForPagination(params) {\n    _scrollToIndex(params, {\n      useOnChangeIndex: false\n    });\n  };\n\n  var paginationProps = {\n    size: size,\n    paginationIndex: currentIndexes.index,\n    scrollToIndex: scrollToIndexForPagination,\n    paginationActiveColor: paginationActiveColor,\n    paginationDefaultColor: paginationDefaultColor,\n    paginationStyle: paginationStyle,\n    paginationStyleItem: paginationStyleItem,\n    paginationStyleItemActive: paginationStyleItemActive,\n    paginationStyleItemInactive: paginationStyleItemInactive,\n    onPaginationSelectedIndex: onPaginationSelectedIndex,\n    e2eID: e2eID\n  };\n  return React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, _extends({}, flatListProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })), showPagination && React.createElement(PaginationComponent, _extends({}, paginationProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 28\n    }\n  })));\n});","map":{"version":3,"sources":["C:/ReactNative/client/node_modules/react-native-swiper-flatlist/src/components/SwiperFlatList/SwiperFlatList.tsx"],"names":["React","Pagination","MILLISECONDS","FIRST_INDEX","ITEM_VISIBLE_PERCENT_THRESHOLD","Dimensions","get","WIDTH","width","HEIGHT","height","SwiperFlatList","forwardRef","ref","vertical","children","data","renderItem","renderAll","index","showPagination","PaginationComponent","paginationActiveColor","paginationDefaultColor","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","autoplayDelay","autoplay","autoplayLoop","autoplayLoopKeepAnimation","autoplayInvertDirection","onChangeIndex","onMomentumScrollEnd","onViewableItemsChanged","viewabilityConfig","disableGesture","e2eID","props","_data","_renderItem","Array","isArray","item","console","error","size","length","_initialNumToRender","useState","prevIndex","currentIndexes","setCurrentIndexes","ignoreOnMomentumScrollEnd","setIgnoreOnMomentumScrollEnd","flatListElement","useRef","scrollEnabled","setScrollEnabled","_onChangeIndex","useCallback","_index","_prevIndex","_scrollToIndex","params","extra","indexToScroll","animated","newParams","next","prevState","useOnChangeIndex","current","scrollToIndex","useEffect","useImperativeHandle","getCurrentIndex","getPrevIndex","goToLastIndex","goToFirstIndex","isLastIndexEnd","shouldContinuoWithAutoplay","autoplayTimer","setTimeout","nextIncrement","nextIndex","animate","clearTimeout","_onMomentumScrollEnd","event","_onViewableItemsChanged","useMemo","changed","newItem","undefined","isViewable","keyExtractor","_item","toString","onScrollToIndexFailed","info","flatListProps","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","pagingEnabled","initialNumToRender","initialScrollIndex","minimumViewTime","itemVisiblePercentThreshold","testID","Platform","OS","getItemLayout","ITEM_DIMENSION","__data","ItemIndex","offset","dataSet","scrollToIndexForPagination","paginationProps","paginationIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, FlatListProps, Platform, Dimensions } from 'react-native';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { SwiperFlatListProps, SwiperFlatListRefProps } from './SwiperFlatListProps';\n\nconst MILLISECONDS = 1000;\nconst FIRST_INDEX = 0;\nconst ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\n\n// TODO: figure out how to use forwardRef with generics\ntype T1 = any;\ntype ScrollToIndex = { index: number; animated?: boolean };\ntype ScrollToIndexInternal = { useOnChangeIndex: boolean };\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get('window');\n\n// const SwiperFlatList = React.forwardRef<RefProps, SwiperFlatListProps<SwiperType>>(\nexport const SwiperFlatList = React.forwardRef(\n  // <T1 extends any>(\n  (\n    {\n      vertical = false,\n      children,\n      data = [],\n      renderItem,\n      renderAll = false,\n      index = FIRST_INDEX,\n      // Pagination\n      showPagination = false,\n      PaginationComponent = Pagination,\n      paginationActiveColor,\n      paginationDefaultColor,\n      paginationStyle,\n      paginationStyleItem,\n      paginationStyleItemActive,\n      paginationStyleItemInactive,\n      onPaginationSelectedIndex,\n      // Autoplay\n      autoplayDelay = 3,\n      autoplay = false,\n      autoplayLoop = false,\n      autoplayLoopKeepAnimation = false,\n      autoplayInvertDirection = false,\n      // Functions\n      onChangeIndex,\n      onMomentumScrollEnd,\n      onViewableItemsChanged,\n      viewabilityConfig = {},\n      disableGesture = false,\n      e2eID,\n      ...props\n    }: SwiperFlatListProps<T1>,\n    ref: React.Ref<SwiperFlatListRefProps>,\n  ) => {\n    let _data: unknown[] = [];\n    let _renderItem: FlatListProps<any>['renderItem'];\n\n    if (children) {\n      // github.com/gusgard/react-native-swiper-flatlist/issues/40\n      _data = Array.isArray(children) ? children : [children];\n      _renderItem = ({ item }) => item;\n    } else if (data) {\n      _data = data;\n      _renderItem = renderItem;\n    } else {\n      console.error('Invalid props, `data` or `children` is required');\n    }\n    const size = _data.length;\n    // Items to render in the initial batch.\n    const _initialNumToRender = renderAll ? size : 1;\n    const [currentIndexes, setCurrentIndexes] = React.useState({ index, prevIndex: index });\n    const [ignoreOnMomentumScrollEnd, setIgnoreOnMomentumScrollEnd] = React.useState(false);\n    const flatListElement = React.useRef<FlatList<unknown>>(null);\n    const [scrollEnabled, setScrollEnabled] = React.useState(!disableGesture);\n\n    const _onChangeIndex = React.useCallback(\n      ({ index: _index, prevIndex: _prevIndex }) => {\n        if (_index !== _prevIndex) {\n          onChangeIndex?.({ index: _index, prevIndex: _prevIndex });\n        }\n      },\n      [onChangeIndex],\n    );\n\n    const _scrollToIndex = (params: ScrollToIndex, extra: ScrollToIndexInternal) => {\n      const { index: indexToScroll, animated = true } = params;\n      const newParams = { animated, index: indexToScroll };\n\n      setIgnoreOnMomentumScrollEnd(true);\n\n      const next = {\n        index: indexToScroll,\n        prevIndex: currentIndexes.index,\n      };\n      if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\n        setCurrentIndexes({ index: next.index, prevIndex: next.prevIndex });\n      } else if (currentIndexes.index !== next.index) {\n        setCurrentIndexes((prevState) => ({ ...prevState, index: next.index }));\n      } else if (currentIndexes.prevIndex !== next.prevIndex) {\n        setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: next.prevIndex }));\n      }\n\n      if (extra.useOnChangeIndex) {\n        _onChangeIndex({ index: next.index, prevIndex: next.prevIndex });\n      }\n\n      // When execute \"scrollToIndex\", we ignore the method \"onMomentumScrollEnd\"\n      // because it not working on Android\n      // https://github.com/facebook/react-native/issues/21718\n      flatListElement?.current?.scrollToIndex(newParams);\n    };\n\n    // change the index when the user swipe the items\n    React.useEffect(() => {\n      _onChangeIndex({ index: currentIndexes.index, prevIndex: currentIndexes.prevIndex });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentIndexes.index]);\n\n    React.useImperativeHandle(ref, () => ({\n      scrollToIndex: (item: ScrollToIndex) => {\n        setScrollEnabled(true);\n        _scrollToIndex(item, { useOnChangeIndex: true });\n        setScrollEnabled(!disableGesture);\n      },\n      getCurrentIndex: () => currentIndexes.index,\n      getPrevIndex: () => currentIndexes.prevIndex,\n      goToLastIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: size - 1 }, { useOnChangeIndex: false });\n        setScrollEnabled(!disableGesture);\n      },\n      goToFirstIndex: () => {\n        setScrollEnabled(true);\n        _scrollToIndex({ index: FIRST_INDEX }, { useOnChangeIndex: false });\n        setScrollEnabled(!disableGesture);\n      },\n    }));\n\n    React.useEffect(() => {\n      const isLastIndexEnd = autoplayInvertDirection\n        ? currentIndexes.index === FIRST_INDEX\n        : currentIndexes.index === _data.length - 1;\n      const shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\n      let autoplayTimer: ReturnType<typeof setTimeout>;\n      if (shouldContinuoWithAutoplay || autoplayLoop) {\n        autoplayTimer = setTimeout(() => {\n          if (_data.length < 1) {\n            // avoid nextIndex being set to NaN\n            return;\n          }\n\n          const nextIncrement = autoplayInvertDirection ? -1 : +1;\n\n          let nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\n          if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\n            nextIndex = _data.length - 1;\n          }\n\n          // Disable end loop animation unless `autoplayLoopKeepAnimation` prop configured\n          const animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\n\n          _scrollToIndex({ index: nextIndex, animated: animate }, { useOnChangeIndex: true });\n        }, autoplayDelay * MILLISECONDS);\n      }\n      // https://upmostly.com/tutorials/settimeout-in-react-components-using-hooks\n      return () => clearTimeout(autoplayTimer);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentIndexes.index]);\n\n    const _onMomentumScrollEnd: FlatListProps<unknown>['onMomentumScrollEnd'] = (event) => {\n      // NOTE: Method not executed when call \"flatListElement?.current?.scrollToIndex\"\n      if (ignoreOnMomentumScrollEnd) {\n        setIgnoreOnMomentumScrollEnd(false);\n        return;\n      }\n\n      onMomentumScrollEnd?.({ index: currentIndexes.index }, event);\n    };\n\n    const _onViewableItemsChanged = React.useMemo<FlatListProps<unknown>['onViewableItemsChanged']>(\n      () => (params) => {\n        const { changed } = params;\n        const newItem = changed?.[FIRST_INDEX];\n        if (newItem !== undefined) {\n          const nextIndex = newItem.index as number;\n          if (newItem.isViewable) {\n            setCurrentIndexes((prevState) => ({ ...prevState, index: nextIndex }));\n          } else {\n            setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: nextIndex }));\n          }\n        }\n        onViewableItemsChanged?.(params);\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [],\n    );\n\n    const keyExtractor: FlatListProps<unknown>['keyExtractor'] = (_item, _index) =>\n      _index.toString();\n    const onScrollToIndexFailed: FlatListProps<unknown>['onScrollToIndexFailed'] = (info) =>\n      setTimeout(() =>\n        _scrollToIndex({ index: info.index, animated: false }, { useOnChangeIndex: true }),\n      );\n\n    const flatListProps = {\n      scrollEnabled,\n      ref: flatListElement,\n      keyExtractor,\n      horizontal: !vertical,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      pagingEnabled: true,\n      ...props,\n      onMomentumScrollEnd: _onMomentumScrollEnd,\n      onScrollToIndexFailed: onScrollToIndexFailed,\n      data: _data,\n      renderItem: _renderItem,\n      initialNumToRender: _initialNumToRender,\n      initialScrollIndex: index, // used with onScrollToIndexFailed\n      viewabilityConfig: {\n        // https://facebook.github.io/react-native/docs/flatlist#minimumviewtime\n        minimumViewTime: 200,\n        itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD,\n        ...viewabilityConfig,\n      },\n      onViewableItemsChanged: _onViewableItemsChanged,\n      // debug: true, // for debug\n      testID: e2eID,\n    };\n\n    if (Platform.OS === 'web') {\n      if (props.getItemLayout === undefined) {\n        // NOTE: should we pass height/width for getItemLayout?\n        const ITEM_DIMENSION = vertical ? HEIGHT : WIDTH;\n        flatListProps.getItemLayout = (__data, ItemIndex: number) => {\n          return {\n            length: ITEM_DIMENSION,\n            offset: ITEM_DIMENSION * ItemIndex,\n            index: ItemIndex,\n          };\n        };\n      }\n\n      (flatListProps as any).dataSet = { 'paging-enabled-fix': true };\n    }\n\n    const scrollToIndexForPagination = (params: ScrollToIndex) => {\n      _scrollToIndex(params, { useOnChangeIndex: false });\n    };\n\n    const paginationProps = {\n      size,\n      paginationIndex: currentIndexes.index,\n      scrollToIndex: scrollToIndexForPagination,\n      paginationActiveColor,\n      paginationDefaultColor,\n      paginationStyle,\n      paginationStyleItem,\n      paginationStyleItemActive,\n      paginationStyleItemInactive,\n      onPaginationSelectedIndex,\n      e2eID,\n    };\n\n    return (\n      <React.Fragment>\n        <FlatList {...flatListProps} />\n        {showPagination && <PaginationComponent {...paginationProps} />}\n      </React.Fragment>\n    );\n  },\n);\n\n// https://gist.github.com/Venryx/7cff24b17867da305fff12c6f8ef6f96\ntype Handle<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer T2>>\n  ? T2\n  : never;\nexport type SwiperFlatList = Handle<typeof SwiperFlatList>;\n"]},"metadata":{},"sourceType":"module"}