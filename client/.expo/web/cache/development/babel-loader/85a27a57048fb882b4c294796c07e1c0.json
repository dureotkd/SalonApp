{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\RN\\\\client\\\\components\\\\Chat.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect, useLayoutEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from \"axios\";\nimport { Con, SafeCon } from \"../assets/common/common\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { timeForToday } from \"../assets/helper/timeHelper\";\nimport Port from \"./Port\";\n\nvar ChatList = function ChatList(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRoom = _useState2[0],\n      setChatRoom = _useState2[1];\n\n  useEffect(function () {\n    axios({\n      method: \"get\",\n      url: Port + \"/getChatRoom\",\n      params: {\n        seq: 1\n      }\n    }).then(function (_ref2) {\n      var data = _ref2.data,\n          status = _ref2.status;\n      if (status === 200) setChatRoom(data);\n    }).catch(function (e) {\n      return alert(e);\n    });\n  }, []);\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, chatRoom && chatRoom.map(function (val, idx) {\n    return React.createElement(TouchableOpacity, {\n      key: val.seq,\n      onPress: function onPress() {\n        return navigation.navigate(\"ChatDetail\", {\n          val: val\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 15,\n        borderBottomColor: \"#e0e0e0\",\n        borderBottomWidth: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 50,\n        height: 50,\n        borderRadius: 50\n      },\n      source: {\n        uri: \"https://file.mk.co.kr/meet/neds/2021/04/image_readtop_2021_330747_16177500644599916.jpg\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        marginLeft: 12,\n        justifyContent: \"space-around\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: \"#4caf50\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, val.title), React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: \"#9e9e9e\",\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, timeForToday(val.reg_date))), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, val.msg)))));\n  }));\n};\n\nvar ChatDetail = function ChatDetail(_ref3) {\n  var route = _ref3.route,\n      navigation = _ref3.navigation;\n  var val = route.params.val;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      msgList = _useState4[0],\n      setMsgList = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputMsg = _useState6[0],\n      setInputMsg = _useState6[1];\n\n  var loginUserNo = 2;\n  var userWidth = Dimensions.get(\"window\").width;\n  var scrollViewRef = useRef();\n  var inputRef = useRef();\n  useEffect(function () {\n    axios({\n      method: \"get\",\n      url: Port + \"/getChatMsg\",\n      params: {\n        room_seq: val.room_seq\n      }\n    }).then(function (_ref4) {\n      var data = _ref4.data,\n          status = _ref4.status;\n      if (status === 200) setMsgList(data);\n    }).catch(function (e) {\n      alert(e);\n    });\n  }, []);\n\n  var saveMsg = function saveMsg() {\n    var now, msg, cloneList;\n    return _regeneratorRuntime.async(function saveMsg$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!((inputMsg == null ? void 0 : inputMsg.length) === 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"메시지를 입력해주세요.\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            now = new Date();\n            msg = {\n              is_read: \"N\",\n              msg: inputMsg,\n              receive_user: val.receive_user,\n              receive_user_name: val.receive_user_name,\n              reg_date: val.reg_date,\n              room_seq: val.room_seq,\n              send_user: loginUserNo,\n              send_user_name: val.send_user_name,\n              seq: now.getTime(),\n              title: val.title\n            };\n            cloneList = _toConsumableArray(msgList);\n            cloneList.push(msg);\n            setMsgList(cloneList);\n            setInputMsg(\"\");\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"get\",\n              url: Port + \"/getInsertMsg\",\n              params: {\n                obj: msg\n              }\n            }).then(function (_ref5) {\n              var data = _ref5.data;\n              console.log(data);\n            }).catch(function (e) {\n              return alert(e);\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Con, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    ref: scrollViewRef,\n    onContentSizeChange: function onContentSizeChange() {\n      return scrollViewRef.current.scrollToEnd({\n        animated: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, msgList && msgList.map(function (val, idx) {\n    return React.createElement(View, {\n      key: val.seq,\n      style: {\n        flexDirection: \"row\",\n        padding: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, loginUserNo === val.send_user ? React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: \"#a5d6a7\",\n        borderRadius: 12,\n        marginRight: 12,\n        padding: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, val.msg)), React.createElement(Image, {\n      style: {\n        width: 50,\n        height: 50,\n        borderRadius: 50\n      },\n      source: {\n        uri: \"https://cloudfront-ap-northeast-1.images.arcpublishing.com/chosun/GRUY3S3TLKVUE5O2IR7OKFK4O4.jpg\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })) : React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 50,\n        height: 50,\n        borderRadius: 50\n      },\n      source: {\n        uri: \"https://cdn.imweb.me/thumbnail/20210114/57a0baa52d786.jpg\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {\n        backgroundColor: \"#424242\",\n        borderRadius: 12,\n        marginLeft: 12,\n        padding: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, val.msg))));\n  })), React.createElement(View, {\n    style: {\n      height: 60\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      height: 60,\n      bottom: 0,\n      width: userWidth,\n      justifyContent: \"center\",\n      padding: 12,\n      backgroundColor: \"#424242\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      setInputMsg(text);\n    },\n    ref: inputRef,\n    placeholder: \"\\uBA54\\uC2DC\\uC9C0\",\n    value: inputMsg,\n    placeholderTextColor: \"#ffffff\",\n    fontSize: 15,\n    style: {\n      color: \"white\",\n      width: userWidth - 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: saveMsg,\n    style: {\n      padding: 12,\n      backgroundColor: \"white\",\n      borderRadius: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"\\uC804\\uC1A1\")))));\n};\n\nvar Stack = createStackNavigator();\n\nvar Chat = function Chat(_ref6) {\n  var route = _ref6.route,\n      navigation = _ref6.navigation;\n  var navigationState = navigation.getState();\n  useLayoutEffect(function () {\n    var _navigationState$rout, _navigationState$rout2;\n\n    var isDetail = (navigationState == null ? void 0 : (_navigationState$rout = navigationState.routes[1]) == null ? void 0 : (_navigationState$rout2 = _navigationState$rout.state) == null ? void 0 : _navigationState$rout2.index) === 1 ? \"none\" : null;\n    navigation.setOptions({\n      tabBarStyle: {\n        display: isDetail\n      }\n    });\n  }, [navigationState]);\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ChatList\",\n    component: ChatList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatDetail\",\n    component: ChatDetail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/RN/client/components/Chat.js"],"names":["React","useState","useRef","useEffect","useLayoutEffect","axios","Con","SafeCon","SafeAreaView","createStackNavigator","NavigationContainer","ScrollView","timeForToday","Port","ChatList","route","navigation","chatRoom","setChatRoom","method","url","params","seq","then","data","status","catch","e","alert","map","val","idx","navigate","flexDirection","padding","borderBottomColor","borderBottomWidth","width","height","borderRadius","uri","marginLeft","justifyContent","fontSize","color","title","reg_date","msg","ChatDetail","msgList","setMsgList","inputMsg","setInputMsg","loginUserNo","userWidth","Dimensions","get","scrollViewRef","inputRef","room_seq","saveMsg","length","now","Date","is_read","receive_user","receive_user_name","send_user","send_user_name","getTime","cloneList","push","obj","console","log","current","scrollToEnd","animated","flex","backgroundColor","marginRight","position","bottom","text","Stack","Chat","navigationState","getState","isDetail","routes","state","index","setOptions","tabBarStyle","display","headerShown"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  Dimensions,\r\n  Button,\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { Con, SafeCon } from \"../assets/common/common\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { timeForToday } from \"../assets/helper/timeHelper\";\r\nimport Port from \"./Port\";\r\n\r\nconst ChatList = ({ route, navigation }) => {\r\n  const [chatRoom, setChatRoom] = useState();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `${Port}/getChatRoom`,\r\n      params: {\r\n        seq: 1,\r\n      },\r\n    })\r\n      .then(({ data, status }) => {\r\n        if (status === 200) setChatRoom(data);\r\n      })\r\n      .catch((e) => alert(e));\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView>\r\n      {chatRoom &&\r\n        chatRoom.map((val, idx) => {\r\n          return (\r\n            <TouchableOpacity\r\n              key={val.seq}\r\n              onPress={() => navigation.navigate(\"ChatDetail\", { val })}\r\n            >\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  padding: 15,\r\n                  borderBottomColor: \"#e0e0e0\",\r\n                  borderBottomWidth: 1,\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{ width: 50, height: 50, borderRadius: 50 }}\r\n                  source={{\r\n                    uri: \"https://file.mk.co.kr/meet/neds/2021/04/image_readtop_2021_330747_16177500644599916.jpg\",\r\n                  }}\r\n                />\r\n                <View\r\n                  style={{\r\n                    marginLeft: 12,\r\n                    justifyContent: \"space-around\",\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\" }}>\r\n                    <Text style={{ fontSize: 12, color: \"#4caf50\" }}>\r\n                      {val.title}\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 12,\r\n                        color: \"#9e9e9e\",\r\n                        marginLeft: 6,\r\n                      }}\r\n                    >\r\n                      {timeForToday(val.reg_date)}\r\n                    </Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text>{val.msg}</Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst ChatDetail = ({ route, navigation }) => {\r\n  const val = route.params.val;\r\n  const [msgList, setMsgList] = useState();\r\n  const [inputMsg, setInputMsg] = useState();\r\n  const loginUserNo = 2;\r\n  const userWidth = Dimensions.get(\"window\").width;\r\n  const scrollViewRef = useRef();\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `${Port}/getChatMsg`,\r\n      params: { room_seq: val.room_seq },\r\n    })\r\n      .then(({ data, status }) => {\r\n        if (status === 200) setMsgList(data);\r\n      })\r\n      .catch((e) => {\r\n        alert(e);\r\n      });\r\n  }, []);\r\n\r\n  const saveMsg = async () => {\r\n    if (inputMsg?.length === 0) {\r\n      alert(\"메시지를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const msg = {\r\n      is_read: \"N\",\r\n      msg: inputMsg,\r\n      receive_user: val.receive_user,\r\n      receive_user_name: val.receive_user_name,\r\n      reg_date: val.reg_date,\r\n      room_seq: val.room_seq,\r\n      send_user: loginUserNo,\r\n      send_user_name: val.send_user_name,\r\n      seq: now.getTime(),\r\n      title: val.title,\r\n    };\r\n    const cloneList = [...msgList];\r\n    cloneList.push(msg);\r\n    setMsgList(cloneList);\r\n    setInputMsg(\"\");\r\n\r\n    await axios({\r\n      method: \"get\",\r\n      url: `${Port}/getInsertMsg`,\r\n      params: { obj: msg },\r\n    })\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n      })\r\n      .catch((e) => alert(e));\r\n  };\r\n\r\n  return (\r\n    <Con>\r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        onContentSizeChange={() =>\r\n          scrollViewRef.current.scrollToEnd({ animated: true })\r\n        }\r\n      >\r\n        {msgList &&\r\n          msgList.map((val, idx) => {\r\n            return (\r\n              <View\r\n                key={val.seq}\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  padding: 15,\r\n                }}\r\n              >\r\n                {loginUserNo === val.send_user ? (\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        backgroundColor: \"#a5d6a7\",\r\n                        borderRadius: 12,\r\n                        marginRight: 12,\r\n                        padding: 12,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"black\" }}>{val.msg}</Text>\r\n                      {/* <Text>{timeForToday(val.reg_date)}</Text> */}\r\n                    </View>\r\n                    <Image\r\n                      style={{ width: 50, height: 50, borderRadius: 50 }}\r\n                      source={{\r\n                        uri: \"https://cloudfront-ap-northeast-1.images.arcpublishing.com/chosun/GRUY3S3TLKVUE5O2IR7OKFK4O4.jpg\",\r\n                      }}\r\n                    />\r\n                  </View>\r\n                ) : (\r\n                  <View\r\n                    style={{\r\n                      flex: 1,\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      style={{ width: 50, height: 50, borderRadius: 50 }}\r\n                      source={{\r\n                        uri: \"https://cdn.imweb.me/thumbnail/20210114/57a0baa52d786.jpg\",\r\n                      }}\r\n                    />\r\n                    <View\r\n                      style={{\r\n                        backgroundColor: \"#424242\",\r\n                        borderRadius: 12,\r\n                        marginLeft: 12,\r\n                        padding: 12,\r\n                      }}\r\n                    >\r\n                      <Text style={{ color: \"white\" }}>{val.msg}</Text>\r\n                    </View>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            );\r\n          })}\r\n      </ScrollView>\r\n      <View style={{ height: 60 }}></View>\r\n      <View\r\n        style={{\r\n          position: \"absolute\",\r\n          height: 60,\r\n          bottom: 0,\r\n          width: userWidth,\r\n          justifyContent: \"center\",\r\n          padding: 12,\r\n          backgroundColor: \"#424242\",\r\n        }}\r\n      >\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <TextInput\r\n            onChangeText={(text) => {\r\n              setInputMsg(text);\r\n            }}\r\n            ref={inputRef}\r\n            placeholder=\"메시지\"\r\n            value={inputMsg}\r\n            placeholderTextColor=\"#ffffff\"\r\n            fontSize={15}\r\n            style={{\r\n              color: \"white\",\r\n              width: userWidth - 70,\r\n            }}\r\n          ></TextInput>\r\n          <TouchableOpacity\r\n            onPress={saveMsg}\r\n            style={{\r\n              padding: 12,\r\n              backgroundColor: \"white\",\r\n              borderRadius: 6,\r\n            }}\r\n          >\r\n            <Text>전송</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Con>\r\n  );\r\n};\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Chat = ({ route, navigation }) => {\r\n  const navigationState = navigation.getState();\r\n  useLayoutEffect(() => {\r\n    const isDetail =\r\n      navigationState?.routes[1]?.state?.index === 1 ? \"none\" : null;\r\n\r\n    navigation.setOptions({\r\n      tabBarStyle: { display: isDetail },\r\n    });\r\n  }, [navigationState]);\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"ChatList\" component={ChatList} />\r\n      <Stack.Screen name=\"ChatDetail\" component={ChatDetail} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}